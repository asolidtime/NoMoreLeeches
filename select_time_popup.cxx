// generated by Fast Light User Interface Designer (fluid) version 1.0308

#include "select_time_popup.h"

void select_time_popup::cb_Cancel_i(Fl_Button*, void*) {
  SelectTimePopup->hide();
}
void select_time_popup::cb_Cancel(Fl_Button* o, void* v) {
  ((select_time_popup*)(o->parent()->user_data()))->cb_Cancel_i(o,v);
}

Fl_Window* select_time_popup::make_window() {
  { SelectTimePopup = new Fl_Window(425, 125, "Select Time");
    SelectTimePopup->user_data((void*)(this));
    { LockdownHoursInput = new Fl_Int_Input(155, 17, 65, 28, "Enter lockdown for: ");
      LockdownHoursInput->type(2);
    } // Fl_Int_Input* LockdownHoursInput
    { LockdownMinutesInput = new Fl_Int_Input(270, 17, 35, 28, "hours,");
      LockdownMinutesInput->type(2);
    } // Fl_Int_Input* LockdownMinutesInput
    { MinutesDisplay = new Fl_Text_Display(367, 16, 75, 30, "minutes");
      MinutesDisplay->box(FL_NO_BOX);
      MinutesDisplay->align(Fl_Align(FL_ALIGN_LEFT));
    } // Fl_Text_Display* MinutesDisplay
    { OK = new Fl_Button(272, 93, 70, 25, "OK");
    } // Fl_Button* OK
    { Cancel = new Fl_Button(350, 93, 70, 25, "Cancel");
      Cancel->callback((Fl_Callback*)cb_Cancel);
    } // Fl_Button* Cancel
    { WaitDisplay = new Fl_Text_Display(0, 68, 425, 40, "Wait xx hours, yy minutes.");
      WaitDisplay->box(FL_NO_BOX);
      WaitDisplay->hide();
    } // Fl_Text_Display* WaitDisplay
    //SelectTimePopup->set_modal();
    SelectTimePopup->end();
  } // Fl_Window* SelectTimePopup
  return SelectTimePopup;
}
